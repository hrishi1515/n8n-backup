 {
  "createdAt": "2025-06-12T07:48:26.596Z",
  "updatedAt": "2025-06-12T07:48:26.000Z",
  "id": "4WbMUbYKDkaGDQIc",
  "name": "My workflow 18",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -760,
        560
      ],
      "id": "56b5244c-ed53-4aa1-9565-7523f51e5ec9",
      "name": "Receive Message",
      "webhookId": "97ad91b8-8d3c-4c40-b197-bd5e509538ba",
      "credentials": {
        "telegramApi": {
          "id": "31exvcdoxRcqQeFh",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        260,
        600
      ],
      "id": "ed8fac24-db98-4790-8fd0-09401e1aad15",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "opkNg3RQ0U03w9cG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# ROLE\nYou are a helpful assistant\nResponse in a friendly and helpful tone.\n\n# Important Information\nYou are speaking to {{ $('Switch').item.json.message.from.first_name }}\nCurrent date and time: {{ $now }}\n\nUser Query Analysis\nIf a user asks about a generic term like ‚Äúfertilizer,‚Äù ‚Äúinsecticide,‚Äù ‚Äúcrop input,‚Äù or ‚Äúseed‚Äù:\n\nPrompt them to clarify:\n\nIntended application/crop (e.g., maize, rice, cotton, vegetables)\n\nPurpose (e.g., pest control, fungus prevention, weed management, nutrition)\n\nOptional filters: Brand or Size\n\nOnce the intent is known:\nSearch the structured coromandel table for relevant matches.\n\nIf no match is found, perform a RAG-based search in unstructured documents.\n\nüß† Information Retrieval Methods\n1. Structured Search (Preferred)\nQuery the coromandel table with the following fields:\n\nProduct Name\n\nBrand\n\nManufacturer\n\nDescription (fallback for crop use or formulation)\n\nSize\n\nItemNumber\n\nProductId\n\nCategory Name (primary filter ‚Äî e.g., FUNGICIDE, INSECTICIDE, HERBICIDE, SEEDS)\n\nSQL Query Generation Rules:\nTable: coromandel\n\nUse ILIKE for all text matches\n\nFilter Examples:\n\nBy category: Category Name ILIKE '%fungicide%'\n\nBy brand: Brand ILIKE '%advanta%'\n\nBy crop (if found in description): Description ILIKE '%maize%'\n\nSort by size (if requested): order by numeric extraction from Size\n\nReturn top 3 matches for brevity\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        300,
        380
      ],
      "id": "cfa4b86e-2e0a-4831-8e73-905d0d384877",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f6d0a607-e0ad-49ba-9987-10ad2889b536",
                    "leftValue": "={{ $json.message.photo }}",
                    "rightValue": "",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2a9d7a90-7f2e-4228-84df-6476a2534a04",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -540,
        560
      ],
      "id": "dce23973-36a3-4c2c-9208-ee3faa47d0f4",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -140,
        360
      ],
      "id": "dbcc50c2-cdff-4267-96dc-51e89f457163",
      "name": "Get Audio File",
      "webhookId": "69f6e50c-5cb1-4840-921c-0f9355e8d216",
      "credentials": {
        "telegramApi": {
          "id": "31exvcdoxRcqQeFh",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Receive Message').item.json.message.chat.id }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        460,
        660
      ],
      "id": "3b6ff2fb-d0b0-466f-b9f0-5064317604ce",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "text": "={{ $('Receive Message').item.json.message.caption || \"Describe this image\" }}",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        200,
        40
      ],
      "id": "d50d4d2c-c6d2-40b4-8620-04c641a2b6d7",
      "name": "Analyze Image",
      "credentials": {
        "openAiApi": {
          "id": "opkNg3RQ0U03w9cG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const inputItem = items[0];\nconst extension = inputItem.binary.data.fileExtension;\ninputItem.binary.data.mimeType = `image/${extension}`;\nreturn inputItem;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        40,
        40
      ],
      "id": "08401d9a-09b6-4048-8280-ca6d7e24f8d7",
      "name": "Fix File Extension"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ec3a884f-480f-4462-9437-a7de0faed372",
              "name": "output",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        360,
        40
      ],
      "id": "dc30f6a6-9c2b-4d1c-a9f8-31d45cacbdb8",
      "name": "Format Output"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "88cbdd27-f094-458b-878f-60504b8c3ad7",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -140,
        620
      ],
      "id": "9cd07063-d4bb-45a8-b8e1-e27ab72c571d",
      "name": "Agent Input"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3d8b9900-fe93-48d3-a1cf-8fd70542f091",
              "leftValue": "={{ $('Receive Message').item.json.message.voice.file_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        880,
        300
      ],
      "id": "75ce441b-1abd-4f9b-83e5-7e3b121b52f3",
      "name": "Audio Response?"
    },
    {
      "parameters": {
        "chatId": "={{ $('Receive Message').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1120,
        420
      ],
      "id": "f7f1dbf2-f58a-4b80-93e4-be5316bd33f0",
      "name": "Text Response",
      "webhookId": "8eae754d-8a63-466c-9469-ba74fed9cbc5",
      "credentials": {
        "telegramApi": {
          "id": "31exvcdoxRcqQeFh",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.output }}",
        "voice": "nova",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1120,
        200
      ],
      "id": "9d71cda7-5be4-4a60-9769-40185b2a9900",
      "name": "Generate Audio",
      "credentials": {
        "openAiApi": {
          "id": "opkNg3RQ0U03w9cG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Receive Message').item.json.message.chat.id }}",
        "binaryData": "={{ true }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1340,
        200
      ],
      "id": "51057ad2-e9e7-4b00-824f-cad887592d67",
      "name": "Audio Response",
      "webhookId": "7553e33b-9898-4766-b45d-ce29aae17af0",
      "credentials": {
        "telegramApi": {
          "id": "31exvcdoxRcqQeFh",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo[0].file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -140,
        40
      ],
      "id": "b51fac23-c255-42db-888c-b5cab64a6ae1",
      "name": "Download Image",
      "webhookId": "75d247d5-b41d-4771-be45-6b47b04d8ece",
      "credentials": {
        "telegramApi": {
          "id": "31exvcdoxRcqQeFh",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        40,
        360
      ],
      "id": "ee5b4e8d-9fc7-4173-976f-b35af68ddb22",
      "name": "Transcribe",
      "credentials": {
        "openAiApi": {
          "id": "opkNg3RQ0U03w9cG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Image Chat",
        "height": 260,
        "width": 760
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        -20
      ],
      "id": "0ff96dbb-eae7-4179-b7f0-945b86d5d722",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Voice Chat",
        "height": 240,
        "width": 540
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        300
      ],
      "id": "0ae4105a-9e40-4d1c-bac1-b57019899fbf",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Text Chat",
        "height": 240,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        560
      ],
      "id": "d02626ad-bc6d-4229-a52c-7cb8a967685b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Handle Responses",
        "height": 480,
        "width": 760
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        680,
        100
      ],
      "id": "c92cd00c-4ebf-4eba-8066-e99276d9564b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## AI Agent",
        "height": 460,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        360,
        340
      ],
      "id": "74cfb1bb-5e40-4d1a-b093-b8adbd343b6f",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        80,
        760
      ],
      "id": "ba0f80ac-7b24-4012-bbd2-b812cc9ef8f2",
      "name": "Google Search",
      "credentials": {
        "serpApi": {
          "id": "dMHvlLqAWm1EobJy",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Call this tool for any calendar action.",
        "workflowId": {
          "__rl": true,
          "value": "3St0TenF8SgtheQF",
          "mode": "list",
          "cachedResultName": "Calendar_Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        320,
        820
      ],
      "id": "b0250085-60cd-4f86-8380-b64ab5aa5b3b",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "name": "emailAgent",
        "description": "Call this tool for any email actions.",
        "workflowId": {
          "__rl": true,
          "value": "AUEEdOLngwrYLOLT",
          "mode": "list",
          "cachedResultName": "Email_Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        180,
        800
      ],
      "id": "d54eb6f5-b063-4c8a-876e-9007918e73bf",
      "name": "Email Agent"
    },
    {
      "parameters": {
        "name": "image_generation_agent",
        "description": "Call this tool for any image generation action.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "HwMYXtXV4twYSbcL",
          "cachedResultName": "image_generation_agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        740,
        720
      ],
      "id": "b801ffa6-7565-496f-92eb-5f3536803587",
      "name": "image generation agent"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "You are an AI assistant that generates SQL queries to search a PostgreSQL database storing product information in a JSONB field (row_data). The table structure is as follows:\nTable: document_rows\nPrimary Key: dataset_id (File ID)\nProduct Data: Stored in row_data (JSONB)\nImportant Product Fields:\nname ‚Üí Product name\nprice ‚Üí Regular price\nspecial_price ‚Üí Discounted price\ndescription ‚Üí Detailed product overview\ncategories ‚Üí Product categories\nQuery Logic:\nIf the user asks for products by category, use case, or application (e.g., \"I need a pump for gardening, commercial, or irrigation purposes\"), generate a query that searches both description and categories for relevant keywords.\nIf the user asks for price-related queries (e.g., \"Show me products under $10,000\"), filter based on price.\nIf the user asks for a specific product by SKU or name, return exact matches.\nIf the user requests sorting (e.g., cheapest, most expensive,etc), modify the query accordingly.\nfind out only the first 3 or top 3 pumps",
        "operation": "executeQuery",
        "query": "{{ $fromAI('sql_query') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        560,
        660
      ],
      "id": "486dee8d-cb02-400c-84e1-e9c1c4b4d099",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "OppxKTuR17k2wxru",
          "name": "Postgres account 7"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents",
        "toolDescription": "Use RAG to look up information in the knowledgebase.",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 10,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.2,
      "position": [
        740,
        540
      ],
      "id": "2dabbae1-0fc7-4814-8042-ddd5996e094e",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "e7A13j05yIr5nwyM",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        960,
        680
      ],
      "id": "8fe6c7d4-3a12-4162-9055-2923cf95640d",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "opkNg3RQ0U03w9cG",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "connections": {
    "Receive Message": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Audio File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Agent Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio File": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Audio Response?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix File Extension": {
      "main": [
        [
          {
            "node": "Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Image": {
      "main": [
        [
          {
            "node": "Format Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Output": {
      "main": [
        [
          {
            "node": "Text Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Input": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Response?": {
      "main": [
        [
          {
            "node": "Generate Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Audio": {
      "main": [
        [
          {
            "node": "Audio Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Fix File Extension",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Search": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Email Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "image generation agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "2d054823-5b25-4ae7-8a09-506abfd164a8",
  "triggerCount": 0,
  "tags": []
}